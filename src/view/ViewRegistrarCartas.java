/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import model.ModelAnimal;
import DAO.DAOAnimal;
import controller.ControllerAnimal;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author igork
 */
public class ViewRegistrarCartas extends javax.swing.JFrame {
     ArrayList<ModelAnimal> listaModelAnimal = new ArrayList<>();
     ControllerAnimal controllerAnimal = new ControllerAnimal();
     ModelAnimal modelAnimal = new ModelAnimal();
     String salvarAlteracao;
    /**
     * Creates new form viewRegistrarCartas
     */
    public ViewRegistrarCartas() {
        initComponents();
        carregarAnimal();
        setLocationRelativeTo(null);
        centralizarColunas();
        bloquearColunas();
        limparcampos();
        habilitarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbAlarmeNovo = new javax.swing.JButton();
        jbAlarmeSalvar = new javax.swing.JButton();
        jlEquipamentoCodigo = new javax.swing.JLabel();
        jlEquipamentoCodigo1 = new javax.swing.JLabel();
        jlEquipamentoDescricao = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtfCodCarta = new javax.swing.JTextField();
        jtfNome = new javax.swing.JTextField();
        jtfVelocidade = new javax.swing.JTextField();
        jtfDefesa = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtAnimal = new javax.swing.JTable();
        jtfForca = new javax.swing.JTextField();
        jbVoltar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbAlterar = new javax.swing.JButton();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();

        jbAlarmeNovo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbAlarmeNovo.setText("Novo");
        jbAlarmeNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlarmeNovoActionPerformed(evt);
            }
        });

        jbAlarmeSalvar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbAlarmeSalvar.setText("Salvar");
        jbAlarmeSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlarmeSalvarActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jlEquipamentoCodigo.setBackground(new java.awt.Color(0, 0, 0));
        jlEquipamentoCodigo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jlEquipamentoCodigo.setForeground(new java.awt.Color(255, 255, 255));
        jlEquipamentoCodigo.setText("Cód. Carta");

        jlEquipamentoCodigo1.setBackground(new java.awt.Color(0, 0, 0));
        jlEquipamentoCodigo1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jlEquipamentoCodigo1.setForeground(new java.awt.Color(255, 255, 255));
        jlEquipamentoCodigo1.setText("Nome:");

        jlEquipamentoDescricao.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jlEquipamentoDescricao.setForeground(new java.awt.Color(255, 255, 255));
        jlEquipamentoDescricao.setText("Força:");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Defesa:");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Velocidade:");

        jtfCodCarta.setEditable(false);

        jtAnimal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "idCarta", "Nome", "Força", "Defesa", "Velocidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtAnimal);

        jbVoltar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbVoltar.setText("Voltar");
        jbVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVoltarActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbAlterar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbAlterar.setText("Alterar");
        jbAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarActionPerformed(evt);
            }
        });

        jbNovo.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jbVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbCancelar)
                .addGap(18, 18, 18)
                .addComponent(jbExcluir)
                .addGap(18, 18, 18)
                .addComponent(jbAlterar)
                .addGap(18, 18, 18)
                .addComponent(jbNovo)
                .addGap(18, 18, 18)
                .addComponent(jbSalvar)
                .addContainerGap(25, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jtfCodCarta)
                    .addComponent(jlEquipamentoCodigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jtfForca, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlEquipamentoCodigo1)
                        .addGap(124, 124, 124)
                        .addComponent(jlEquipamentoDescricao)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jtfDefesa, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jtfVelocidade, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jlEquipamentoCodigo1)
                    .addComponent(jlEquipamentoCodigo)
                    .addComponent(jlEquipamentoDescricao)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCodCarta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfDefesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfVelocidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfForca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbVoltar)
                    .addComponent(jbCancelar)
                    .addComponent(jbExcluir)
                    .addComponent(jbAlterar)
                    .addComponent(jbSalvar)
                    .addComponent(jbNovo))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void habilitarCampos(){
        jbSalvar.setEnabled(false);
        jtfCodCarta.setEnabled(false);
        jbCancelar.setEnabled(false);
        jtfNome.setEnabled(false);
        jtfForca.setEnabled(false);
        jtfDefesa.setEnabled(false);
        jtfVelocidade.setEnabled(false);
    }
    
    private void jbVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVoltarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbVoltarActionPerformed
    
    private void centralizarColunas(){//Centraliza o texto das colunas
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();        
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);
        jtAnimal.getColumnModel().getColumn(0).setCellRenderer(centralizado);
        jtAnimal.getColumnModel().getColumn(1).setCellRenderer(centralizado);
        jtAnimal.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        jtAnimal.getColumnModel().getColumn(3).setCellRenderer(centralizado);
        jtAnimal.getColumnModel().getColumn(4).setCellRenderer(centralizado);
    ((DefaultTableCellRenderer) jtAnimal.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
    }
    
    private void bloquearColunas(){
      jtAnimal.getTableHeader().setReorderingAllowed (false);  
    }
    
     private void limparcampos(){ //Limpa o campo de texto
        jtfNome.setText("");
        jtfForca.setText("");
        jtfDefesa.setText("");
        jtfVelocidade.setText("");    
    }
    
    private void carregarAnimal(){
        listaModelAnimal = controllerAnimal.getListaAnimalController();
        DefaultTableModel model = (DefaultTableModel) jtAnimal.getModel();
        model.setNumRows(0); 
        int contador = listaModelAnimal.size();
        for (int i = 0; i < contador; i++) {
            model.addRow(new Object[]{
                listaModelAnimal.get(i).getIdAnimal(),
                listaModelAnimal.get(i).getAnimalNome(),
                listaModelAnimal.get(i).getAnimalForca(),
                listaModelAnimal.get(i).getAnimalDefesa(),
                listaModelAnimal.get(i).getAnimalVelocidade(),
            });
            
        }
    } 
     
    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        // TODO add your handling code here:
        limparcampos();
        jbAlterar.setEnabled(true);
        jbExcluir.setEnabled(true);
        jbAlarmeSalvar.setEnabled(false);
        jbCancelar.setEnabled(false);
        jbSalvar.setEnabled(false);
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        // TODO add your handling code here:
        int linhaSelecionada = jtAnimal.getSelectedRow();
        int codigoAnimal =(int) jtAnimal.getValueAt(linhaSelecionada, 0);
        
        if (controllerAnimal.excluirAnimalController(codigoAnimal)) {
            JOptionPane.showMessageDialog(this, " O Alarme foi excluido com sucesso.");
            carregarAnimal();
        }else{
            JOptionPane.showMessageDialog(this, " Erro ao excluir o Alarme.");
        } 
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarActionPerformed
        // TODO add your handling code here:
        int linhaSelecionada = this.jtAnimal.getSelectedRow();
        salvarAlteracao = "alterar";
        jbSalvar.setEnabled(true);
        jbCancelar.setEnabled(true);
        try {
            int codigoAnimal = (int) this.jtAnimal.getValueAt(linhaSelecionada, 0);
            modelAnimal = controllerAnimal.getAnimalController(codigoAnimal);
            this.jtfCodCarta.setText(String.valueOf(modelAnimal.getIdAnimal()));
            this.jtfNome.setText(String.valueOf(modelAnimal.getAnimalNome()));
            this.jtfForca.setText(String.valueOf(modelAnimal.getAnimalForca()));
            this.jtfDefesa.setText(String.valueOf(modelAnimal.getAnimalDefesa()));
            this.jtfVelocidade.setText(String.valueOf(modelAnimal.getAnimalVelocidade()));
            jbCancelar.setEnabled(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, " Erro ao alterar a carta.");
        }
    }//GEN-LAST:event_jbAlterarActionPerformed

    private void salvarAlarme(){ 
              
        modelAnimal.setAnimalNome(this.jtfNome.getText());
        modelAnimal.setAnimalForca(Double.valueOf(this.jtfForca.getText()));
        modelAnimal.setAnimalDefesa(Double.valueOf(this.jtfDefesa.getText()));
        modelAnimal.setAnimalVelocidade(Double.valueOf(this.jtfVelocidade.getText()));
        if (controllerAnimal.salvarAnimalController(modelAnimal)>0) {
            JOptionPane.showMessageDialog(this, " A carta foi registrado com sucesso.");
            limparcampos();
            carregarAnimal();
            jbSalvar.setEnabled(false);
            jbAlterar.setEnabled(true);
            jbExcluir.setEnabled(true);
        }else{
            JOptionPane.showMessageDialog(this, " Erro ao registrar a carta.");
        }
    }
    
    private void alterarAlarme(){
        jtfNome.setEnabled(true);
        jtfForca.setEnabled(true);
        jtfDefesa.setEnabled(true);
        jtfVelocidade.setEnabled(true);
        modelAnimal.setAnimalNome(this.jtfNome.getText());
        modelAnimal.setAnimalForca(Double.valueOf(this.jtfForca.getText()));
        modelAnimal.setAnimalDefesa(Double.valueOf(this.jtfDefesa.getText()));
        modelAnimal.setAnimalVelocidade(Double.valueOf(this.jtfVelocidade.getText()));
        if (controllerAnimal.atualizarAnimalController(modelAnimal)) {
            JOptionPane.showMessageDialog(this, " A carta foi alterada com sucesso.");
            carregarAnimal();
            limparcampos();
            jbSalvar.setEnabled(false);
        }else{
            JOptionPane.showMessageDialog(this, " Erro ao alterar a carta.");
        }
    }
    
    private void jbAlarmeNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlarmeNovoActionPerformed
        // TODO add your handling code here:
        limparcampos();
        salvarAlteracao = "salvar";
        jbAlarmeSalvar.setEnabled(true);
        jbAlterar.setEnabled(false);
        jbExcluir.setEnabled(false);
    }//GEN-LAST:event_jbAlarmeNovoActionPerformed

    private void jbAlarmeSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlarmeSalvarActionPerformed
        // TODO add your handling code here:

        jtfCodCarta.setText("");
        if (salvarAlteracao=="salvar") {
            this.salvarAlarme();
        }else if(salvarAlteracao=="alterar") {
            this.alterarAlarme();
        }
    }//GEN-LAST:event_jbAlarmeSalvarActionPerformed

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        // TODO add your handling code here:
        limparcampos();
        jtfNome.setEnabled(true);
        jtfForca.setEnabled(true);
        jtfDefesa.setEnabled(true);
        jtfVelocidade.setEnabled(true);
        jbCancelar.setEnabled(true);
        salvarAlteracao = "salvar";
        jbSalvar.setEnabled(true);
        jbAlterar.setEnabled(false);
        jbExcluir.setEnabled(false);
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        // TODO add your handling code here:

        jtfCodCarta.setText("");
        jtfNome.setEnabled(false);
        jtfForca.setEnabled(false);
        jtfDefesa.setEnabled(false);
        jtfVelocidade.setEnabled(false);
        if (salvarAlteracao=="salvar") {
            this.salvarAlarme();
        }else if(salvarAlteracao=="alterar") {
            this.alterarAlarme();
            jbCancelar.setEnabled(false);
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewRegistrarCartas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewRegistrarCartas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewRegistrarCartas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewRegistrarCartas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewRegistrarCartas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAlarmeNovo;
    private javax.swing.JButton jbAlarmeSalvar;
    private javax.swing.JButton jbAlterar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JButton jbVoltar;
    private javax.swing.JLabel jlEquipamentoCodigo;
    private javax.swing.JLabel jlEquipamentoCodigo1;
    private javax.swing.JLabel jlEquipamentoDescricao;
    private javax.swing.JTable jtAnimal;
    private javax.swing.JTextField jtfAlarmeDescricao3;
    private javax.swing.JTextField jtfAlarmeDescricao4;
    private javax.swing.JTextField jtfCodCarta;
    private javax.swing.JTextField jtfDefesa;
    private javax.swing.JTextField jtfForca;
    private javax.swing.JTextField jtfNome;
    private javax.swing.JTextField jtfVelocidade;
    // End of variables declaration//GEN-END:variables

    private void jbSalvar(boolean b) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
